// Generated from D:/Desktop/Master of Science/1. Semester/Concepts of Programming Languages/GruppenProjekt/githubrepo/compiler/src/main/antlr/MainAntlr.g4 by ANTLR 4.13.1

package org.cmjava2023.generated_from_antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class MainAntlrLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PACKAGE_KEYWORD=1, CLASS_KEYWORD=2, INSTANCE_MODIFIER=3, BOOLEAN_KEYWORD=4, 
		BYTE_KEYWORD=5, SHORT_KEYWORD=6, INT_KEYWORD=7, LONG_KEYWORD=8, CHAR_KEYWORD=9, 
		FLOAT_KEYWORD=10, DOUBLE_KEYWORD=11, EXTENDS_KEYWORD=12, SUPER_KEYWORD=13, 
		VOID_KEYWORD=14, PUBLIC_KEYWORD=15, PRIVATE_KEYWORD=16, PROTECTED_KEYWORD=17, 
		RETURN_KEYWORD=18, IF_KEYWORD=19, ELSE_KEYWORD=20, IDENTIFIER=21, SEMICOLON=22, 
		COLON=23, COMMA=24, DOT=25, PAREN_OPEN=26, PAREN_CLOSE=27, BRACKET_OPEN=28, 
		BRACKET_CLOSE=29, CURLY_OPEN=30, CURLY_CLOSE=31, DIAMOND_OPEN=32, DIAMOND_CLOSE=33, 
		EQUALS=34, EQ=35, NEQ=36, GTE=37, LTE=38, MOD=39, LAND=40, LOR=41, WHITESPACE=42, 
		STRING=43, INTEGER=44, DECIMAL=45;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"PACKAGE_KEYWORD", "CLASS_KEYWORD", "INSTANCE_MODIFIER", "BOOLEAN_KEYWORD", 
			"BYTE_KEYWORD", "SHORT_KEYWORD", "INT_KEYWORD", "LONG_KEYWORD", "CHAR_KEYWORD", 
			"FLOAT_KEYWORD", "DOUBLE_KEYWORD", "EXTENDS_KEYWORD", "SUPER_KEYWORD", 
			"VOID_KEYWORD", "PUBLIC_KEYWORD", "PRIVATE_KEYWORD", "PROTECTED_KEYWORD", 
			"RETURN_KEYWORD", "IF_KEYWORD", "ELSE_KEYWORD", "IDENTIFIER", "SEMICOLON", 
			"COLON", "COMMA", "DOT", "PAREN_OPEN", "PAREN_CLOSE", "BRACKET_OPEN", 
			"BRACKET_CLOSE", "CURLY_OPEN", "CURLY_CLOSE", "DIAMOND_OPEN", "DIAMOND_CLOSE", 
			"EQUALS", "EQ", "NEQ", "GTE", "LTE", "MOD", "LAND", "LOR", "WHITESPACE", 
			"STRING", "INTEGER", "DECIMAL", "NAME", "CHAR", "DIGIT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'package'", "'class'", "'static'", "'boolean'", "'byte'", "'short'", 
			"'int'", "'long'", "'char'", "'float'", "'double'", "'extends'", "'super'", 
			"'void'", "'public'", "'private'", "'protected'", "'return'", "'if'", 
			"'else'", null, "';'", "':'", "','", "'.'", "'('", "')'", "'['", "']'", 
			"'{'", "'}'", "'<'", "'>'", "'='", "'=='", "'!='", "'>='", "'<='", "'%'", 
			"'&&'", "'||'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "PACKAGE_KEYWORD", "CLASS_KEYWORD", "INSTANCE_MODIFIER", "BOOLEAN_KEYWORD", 
			"BYTE_KEYWORD", "SHORT_KEYWORD", "INT_KEYWORD", "LONG_KEYWORD", "CHAR_KEYWORD", 
			"FLOAT_KEYWORD", "DOUBLE_KEYWORD", "EXTENDS_KEYWORD", "SUPER_KEYWORD", 
			"VOID_KEYWORD", "PUBLIC_KEYWORD", "PRIVATE_KEYWORD", "PROTECTED_KEYWORD", 
			"RETURN_KEYWORD", "IF_KEYWORD", "ELSE_KEYWORD", "IDENTIFIER", "SEMICOLON", 
			"COLON", "COMMA", "DOT", "PAREN_OPEN", "PAREN_CLOSE", "BRACKET_OPEN", 
			"BRACKET_CLOSE", "CURLY_OPEN", "CURLY_CLOSE", "DIAMOND_OPEN", "DIAMOND_CLOSE", 
			"EQUALS", "EQ", "NEQ", "GTE", "LTE", "MOD", "LAND", "LOR", "WHITESPACE", 
			"STRING", "INTEGER", "DECIMAL"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MainAntlrLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MainAntlr.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000-\u013c\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001"+
		"\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001"+
		"\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001\""+
		"\u0001#\u0001#\u0001#\u0001$\u0001$\u0001$\u0001%\u0001%\u0001%\u0001"+
		"&\u0001&\u0001\'\u0001\'\u0001\'\u0001(\u0001(\u0001(\u0001)\u0001)\u0001"+
		")\u0001)\u0001*\u0001*\u0001*\u0001*\u0005*\u0118\b*\n*\f*\u011b\t*\u0001"+
		"*\u0001*\u0001+\u0004+\u0120\b+\u000b+\f+\u0121\u0001,\u0001,\u0005,\u0126"+
		"\b,\n,\f,\u0129\t,\u0001,\u0001,\u0004,\u012d\b,\u000b,\f,\u012e\u0001"+
		"-\u0001-\u0001-\u0005-\u0134\b-\n-\f-\u0137\t-\u0001.\u0001.\u0001/\u0001"+
		"/\u0000\u00000\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005"+
		"\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019"+
		"\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015"+
		"+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f"+
		"? A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-[\u0000]\u0000_\u0000\u0001\u0000\u0005"+
		"\u0003\u0000\t\n\r\r  \u0001\u0000\"\"\u0001\u000019\u0004\u0000$$AZ_"+
		"_az\u0001\u000009\u013f\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003"+
		"\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007"+
		"\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001"+
		"\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000"+
		"\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000"+
		"\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000"+
		"\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000"+
		"\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000"+
		"\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000"+
		"\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000"+
		")\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001"+
		"\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000"+
		"\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u0000"+
		"7\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001"+
		"\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000"+
		"\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000"+
		"E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001"+
		"\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000"+
		"\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000"+
		"S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000\u0000W\u0001"+
		"\u0000\u0000\u0000\u0000Y\u0001\u0000\u0000\u0000\u0001a\u0001\u0000\u0000"+
		"\u0000\u0003i\u0001\u0000\u0000\u0000\u0005o\u0001\u0000\u0000\u0000\u0007"+
		"v\u0001\u0000\u0000\u0000\t~\u0001\u0000\u0000\u0000\u000b\u0083\u0001"+
		"\u0000\u0000\u0000\r\u0089\u0001\u0000\u0000\u0000\u000f\u008d\u0001\u0000"+
		"\u0000\u0000\u0011\u0092\u0001\u0000\u0000\u0000\u0013\u0097\u0001\u0000"+
		"\u0000\u0000\u0015\u009d\u0001\u0000\u0000\u0000\u0017\u00a4\u0001\u0000"+
		"\u0000\u0000\u0019\u00ac\u0001\u0000\u0000\u0000\u001b\u00b2\u0001\u0000"+
		"\u0000\u0000\u001d\u00b7\u0001\u0000\u0000\u0000\u001f\u00be\u0001\u0000"+
		"\u0000\u0000!\u00c6\u0001\u0000\u0000\u0000#\u00d0\u0001\u0000\u0000\u0000"+
		"%\u00d7\u0001\u0000\u0000\u0000\'\u00da\u0001\u0000\u0000\u0000)\u00df"+
		"\u0001\u0000\u0000\u0000+\u00e1\u0001\u0000\u0000\u0000-\u00e3\u0001\u0000"+
		"\u0000\u0000/\u00e5\u0001\u0000\u0000\u00001\u00e7\u0001\u0000\u0000\u0000"+
		"3\u00e9\u0001\u0000\u0000\u00005\u00eb\u0001\u0000\u0000\u00007\u00ed"+
		"\u0001\u0000\u0000\u00009\u00ef\u0001\u0000\u0000\u0000;\u00f1\u0001\u0000"+
		"\u0000\u0000=\u00f3\u0001\u0000\u0000\u0000?\u00f5\u0001\u0000\u0000\u0000"+
		"A\u00f7\u0001\u0000\u0000\u0000C\u00f9\u0001\u0000\u0000\u0000E\u00fb"+
		"\u0001\u0000\u0000\u0000G\u00fe\u0001\u0000\u0000\u0000I\u0101\u0001\u0000"+
		"\u0000\u0000K\u0104\u0001\u0000\u0000\u0000M\u0107\u0001\u0000\u0000\u0000"+
		"O\u0109\u0001\u0000\u0000\u0000Q\u010c\u0001\u0000\u0000\u0000S\u010f"+
		"\u0001\u0000\u0000\u0000U\u0113\u0001\u0000\u0000\u0000W\u011f\u0001\u0000"+
		"\u0000\u0000Y\u0123\u0001\u0000\u0000\u0000[\u0130\u0001\u0000\u0000\u0000"+
		"]\u0138\u0001\u0000\u0000\u0000_\u013a\u0001\u0000\u0000\u0000ab\u0005"+
		"p\u0000\u0000bc\u0005a\u0000\u0000cd\u0005c\u0000\u0000de\u0005k\u0000"+
		"\u0000ef\u0005a\u0000\u0000fg\u0005g\u0000\u0000gh\u0005e\u0000\u0000"+
		"h\u0002\u0001\u0000\u0000\u0000ij\u0005c\u0000\u0000jk\u0005l\u0000\u0000"+
		"kl\u0005a\u0000\u0000lm\u0005s\u0000\u0000mn\u0005s\u0000\u0000n\u0004"+
		"\u0001\u0000\u0000\u0000op\u0005s\u0000\u0000pq\u0005t\u0000\u0000qr\u0005"+
		"a\u0000\u0000rs\u0005t\u0000\u0000st\u0005i\u0000\u0000tu\u0005c\u0000"+
		"\u0000u\u0006\u0001\u0000\u0000\u0000vw\u0005b\u0000\u0000wx\u0005o\u0000"+
		"\u0000xy\u0005o\u0000\u0000yz\u0005l\u0000\u0000z{\u0005e\u0000\u0000"+
		"{|\u0005a\u0000\u0000|}\u0005n\u0000\u0000}\b\u0001\u0000\u0000\u0000"+
		"~\u007f\u0005b\u0000\u0000\u007f\u0080\u0005y\u0000\u0000\u0080\u0081"+
		"\u0005t\u0000\u0000\u0081\u0082\u0005e\u0000\u0000\u0082\n\u0001\u0000"+
		"\u0000\u0000\u0083\u0084\u0005s\u0000\u0000\u0084\u0085\u0005h\u0000\u0000"+
		"\u0085\u0086\u0005o\u0000\u0000\u0086\u0087\u0005r\u0000\u0000\u0087\u0088"+
		"\u0005t\u0000\u0000\u0088\f\u0001\u0000\u0000\u0000\u0089\u008a\u0005"+
		"i\u0000\u0000\u008a\u008b\u0005n\u0000\u0000\u008b\u008c\u0005t\u0000"+
		"\u0000\u008c\u000e\u0001\u0000\u0000\u0000\u008d\u008e\u0005l\u0000\u0000"+
		"\u008e\u008f\u0005o\u0000\u0000\u008f\u0090\u0005n\u0000\u0000\u0090\u0091"+
		"\u0005g\u0000\u0000\u0091\u0010\u0001\u0000\u0000\u0000\u0092\u0093\u0005"+
		"c\u0000\u0000\u0093\u0094\u0005h\u0000\u0000\u0094\u0095\u0005a\u0000"+
		"\u0000\u0095\u0096\u0005r\u0000\u0000\u0096\u0012\u0001\u0000\u0000\u0000"+
		"\u0097\u0098\u0005f\u0000\u0000\u0098\u0099\u0005l\u0000\u0000\u0099\u009a"+
		"\u0005o\u0000\u0000\u009a\u009b\u0005a\u0000\u0000\u009b\u009c\u0005t"+
		"\u0000\u0000\u009c\u0014\u0001\u0000\u0000\u0000\u009d\u009e\u0005d\u0000"+
		"\u0000\u009e\u009f\u0005o\u0000\u0000\u009f\u00a0\u0005u\u0000\u0000\u00a0"+
		"\u00a1\u0005b\u0000\u0000\u00a1\u00a2\u0005l\u0000\u0000\u00a2\u00a3\u0005"+
		"e\u0000\u0000\u00a3\u0016\u0001\u0000\u0000\u0000\u00a4\u00a5\u0005e\u0000"+
		"\u0000\u00a5\u00a6\u0005x\u0000\u0000\u00a6\u00a7\u0005t\u0000\u0000\u00a7"+
		"\u00a8\u0005e\u0000\u0000\u00a8\u00a9\u0005n\u0000\u0000\u00a9\u00aa\u0005"+
		"d\u0000\u0000\u00aa\u00ab\u0005s\u0000\u0000\u00ab\u0018\u0001\u0000\u0000"+
		"\u0000\u00ac\u00ad\u0005s\u0000\u0000\u00ad\u00ae\u0005u\u0000\u0000\u00ae"+
		"\u00af\u0005p\u0000\u0000\u00af\u00b0\u0005e\u0000\u0000\u00b0\u00b1\u0005"+
		"r\u0000\u0000\u00b1\u001a\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005v\u0000"+
		"\u0000\u00b3\u00b4\u0005o\u0000\u0000\u00b4\u00b5\u0005i\u0000\u0000\u00b5"+
		"\u00b6\u0005d\u0000\u0000\u00b6\u001c\u0001\u0000\u0000\u0000\u00b7\u00b8"+
		"\u0005p\u0000\u0000\u00b8\u00b9\u0005u\u0000\u0000\u00b9\u00ba\u0005b"+
		"\u0000\u0000\u00ba\u00bb\u0005l\u0000\u0000\u00bb\u00bc\u0005i\u0000\u0000"+
		"\u00bc\u00bd\u0005c\u0000\u0000\u00bd\u001e\u0001\u0000\u0000\u0000\u00be"+
		"\u00bf\u0005p\u0000\u0000\u00bf\u00c0\u0005r\u0000\u0000\u00c0\u00c1\u0005"+
		"i\u0000\u0000\u00c1\u00c2\u0005v\u0000\u0000\u00c2\u00c3\u0005a\u0000"+
		"\u0000\u00c3\u00c4\u0005t\u0000\u0000\u00c4\u00c5\u0005e\u0000\u0000\u00c5"+
		" \u0001\u0000\u0000\u0000\u00c6\u00c7\u0005p\u0000\u0000\u00c7\u00c8\u0005"+
		"r\u0000\u0000\u00c8\u00c9\u0005o\u0000\u0000\u00c9\u00ca\u0005t\u0000"+
		"\u0000\u00ca\u00cb\u0005e\u0000\u0000\u00cb\u00cc\u0005c\u0000\u0000\u00cc"+
		"\u00cd\u0005t\u0000\u0000\u00cd\u00ce\u0005e\u0000\u0000\u00ce\u00cf\u0005"+
		"d\u0000\u0000\u00cf\"\u0001\u0000\u0000\u0000\u00d0\u00d1\u0005r\u0000"+
		"\u0000\u00d1\u00d2\u0005e\u0000\u0000\u00d2\u00d3\u0005t\u0000\u0000\u00d3"+
		"\u00d4\u0005u\u0000\u0000\u00d4\u00d5\u0005r\u0000\u0000\u00d5\u00d6\u0005"+
		"n\u0000\u0000\u00d6$\u0001\u0000\u0000\u0000\u00d7\u00d8\u0005i\u0000"+
		"\u0000\u00d8\u00d9\u0005f\u0000\u0000\u00d9&\u0001\u0000\u0000\u0000\u00da"+
		"\u00db\u0005e\u0000\u0000\u00db\u00dc\u0005l\u0000\u0000\u00dc\u00dd\u0005"+
		"s\u0000\u0000\u00dd\u00de\u0005e\u0000\u0000\u00de(\u0001\u0000\u0000"+
		"\u0000\u00df\u00e0\u0003[-\u0000\u00e0*\u0001\u0000\u0000\u0000\u00e1"+
		"\u00e2\u0005;\u0000\u0000\u00e2,\u0001\u0000\u0000\u0000\u00e3\u00e4\u0005"+
		":\u0000\u0000\u00e4.\u0001\u0000\u0000\u0000\u00e5\u00e6\u0005,\u0000"+
		"\u0000\u00e60\u0001\u0000\u0000\u0000\u00e7\u00e8\u0005.\u0000\u0000\u00e8"+
		"2\u0001\u0000\u0000\u0000\u00e9\u00ea\u0005(\u0000\u0000\u00ea4\u0001"+
		"\u0000\u0000\u0000\u00eb\u00ec\u0005)\u0000\u0000\u00ec6\u0001\u0000\u0000"+
		"\u0000\u00ed\u00ee\u0005[\u0000\u0000\u00ee8\u0001\u0000\u0000\u0000\u00ef"+
		"\u00f0\u0005]\u0000\u0000\u00f0:\u0001\u0000\u0000\u0000\u00f1\u00f2\u0005"+
		"{\u0000\u0000\u00f2<\u0001\u0000\u0000\u0000\u00f3\u00f4\u0005}\u0000"+
		"\u0000\u00f4>\u0001\u0000\u0000\u0000\u00f5\u00f6\u0005<\u0000\u0000\u00f6"+
		"@\u0001\u0000\u0000\u0000\u00f7\u00f8\u0005>\u0000\u0000\u00f8B\u0001"+
		"\u0000\u0000\u0000\u00f9\u00fa\u0005=\u0000\u0000\u00faD\u0001\u0000\u0000"+
		"\u0000\u00fb\u00fc\u0005=\u0000\u0000\u00fc\u00fd\u0005=\u0000\u0000\u00fd"+
		"F\u0001\u0000\u0000\u0000\u00fe\u00ff\u0005!\u0000\u0000\u00ff\u0100\u0005"+
		"=\u0000\u0000\u0100H\u0001\u0000\u0000\u0000\u0101\u0102\u0005>\u0000"+
		"\u0000\u0102\u0103\u0005=\u0000\u0000\u0103J\u0001\u0000\u0000\u0000\u0104"+
		"\u0105\u0005<\u0000\u0000\u0105\u0106\u0005=\u0000\u0000\u0106L\u0001"+
		"\u0000\u0000\u0000\u0107\u0108\u0005%\u0000\u0000\u0108N\u0001\u0000\u0000"+
		"\u0000\u0109\u010a\u0005&\u0000\u0000\u010a\u010b\u0005&\u0000\u0000\u010b"+
		"P\u0001\u0000\u0000\u0000\u010c\u010d\u0005|\u0000\u0000\u010d\u010e\u0005"+
		"|\u0000\u0000\u010eR\u0001\u0000\u0000\u0000\u010f\u0110\u0007\u0000\u0000"+
		"\u0000\u0110\u0111\u0001\u0000\u0000\u0000\u0111\u0112\u0006)\u0000\u0000"+
		"\u0112T\u0001\u0000\u0000\u0000\u0113\u0119\u0005\"\u0000\u0000\u0114"+
		"\u0118\b\u0001\u0000\u0000\u0115\u0116\u0005/\u0000\u0000\u0116\u0118"+
		"\u0005\"\u0000\u0000\u0117\u0114\u0001\u0000\u0000\u0000\u0117\u0115\u0001"+
		"\u0000\u0000\u0000\u0118\u011b\u0001\u0000\u0000\u0000\u0119\u0117\u0001"+
		"\u0000\u0000\u0000\u0119\u011a\u0001\u0000\u0000\u0000\u011a\u011c\u0001"+
		"\u0000\u0000\u0000\u011b\u0119\u0001\u0000\u0000\u0000\u011c\u011d\u0005"+
		"\"\u0000\u0000\u011dV\u0001\u0000\u0000\u0000\u011e\u0120\u0003_/\u0000"+
		"\u011f\u011e\u0001\u0000\u0000\u0000\u0120\u0121\u0001\u0000\u0000\u0000"+
		"\u0121\u011f\u0001\u0000\u0000\u0000\u0121\u0122\u0001\u0000\u0000\u0000"+
		"\u0122X\u0001\u0000\u0000\u0000\u0123\u0127\u0007\u0002\u0000\u0000\u0124"+
		"\u0126\u0003_/\u0000\u0125\u0124\u0001\u0000\u0000\u0000\u0126\u0129\u0001"+
		"\u0000\u0000\u0000\u0127\u0125\u0001\u0000\u0000\u0000\u0127\u0128\u0001"+
		"\u0000\u0000\u0000\u0128\u012a\u0001\u0000\u0000\u0000\u0129\u0127\u0001"+
		"\u0000\u0000\u0000\u012a\u012c\u00031\u0018\u0000\u012b\u012d\u0003_/"+
		"\u0000\u012c\u012b\u0001\u0000\u0000\u0000\u012d\u012e\u0001\u0000\u0000"+
		"\u0000\u012e\u012c\u0001\u0000\u0000\u0000\u012e\u012f\u0001\u0000\u0000"+
		"\u0000\u012fZ\u0001\u0000\u0000\u0000\u0130\u0135\u0003].\u0000\u0131"+
		"\u0134\u0003_/\u0000\u0132\u0134\u0003].\u0000\u0133\u0131\u0001\u0000"+
		"\u0000\u0000\u0133\u0132\u0001\u0000\u0000\u0000\u0134\u0137\u0001\u0000"+
		"\u0000\u0000\u0135\u0133\u0001\u0000\u0000\u0000\u0135\u0136\u0001\u0000"+
		"\u0000\u0000\u0136\\\u0001\u0000\u0000\u0000\u0137\u0135\u0001\u0000\u0000"+
		"\u0000\u0138\u0139\u0007\u0003\u0000\u0000\u0139^\u0001\u0000\u0000\u0000"+
		"\u013a\u013b\u0007\u0004\u0000\u0000\u013b`\u0001\u0000\u0000\u0000\b"+
		"\u0000\u0117\u0119\u0121\u0127\u012e\u0133\u0135\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}