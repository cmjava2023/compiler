package org.cmjava2023.classfilespecification

import org.cmjava2023.util.ByteListUtil.Companion.add

abstract class OpCode(val opCodeValue:UByte) {
    fun toBytes(): List<Byte> {
        val result = mutableListOf<Byte>()
        result.add(opCodeValue)
        result.addAll(getBytesAfterOpCode())
        return result
    }

    protected abstract fun getBytesAfterOpCode(): List<Byte>

    open class OpCodeWithIndices(opCodeValue: UByte, private vararg val indices: Short): OpCode(opCodeValue) {
        override fun getBytesAfterOpCode(): List<Byte> {
            val result = mutableListOf<Byte>()
            indices.forEach { result.add(it) }
            return result
        }
    }

    class Return: OpCodeWithIndices(0xb1u)
    class Aload_0: OpCodeWithIndices(0x2au)
    class GetStatic(referenceIndex: Short): OpCodeWithIndices(0xb2u, referenceIndex)
    class InvokeVirtual(referenceIndex: Short): OpCodeWithIndices(0xb6u, referenceIndex)
    class InvokeSpecial(referenceIndex: Short): OpCodeWithIndices(0xb7u, referenceIndex)
    class LoaDConstant(private val constantIndex: UByte): OpCode(0x12u) {
        override fun getBytesAfterOpCode(): List<Byte> {
            val result = mutableListOf<Byte>()
            result.add(constantIndex)
            return result
        }
        // Duplicate with Class Ldc
    }
    // Opcodes taken from https://en.wikipedia.org/wiki/List_of_Java_bytecode_instructions
    // some Opcodes are not yet created as a class
    class Aaload: OpCodeWithIndices(0x32u)
    class Aastore: OpCodeWithIndices(0x53u)
    class Aconst_null: OpCodeWithIndices(0x01u)
    class Aload(referenceIndex: Short): OpCodeWithIndices(0x19u, referenceIndex)
    class Aload_1: OpCodeWithIndices(0x2bu)
    class Aload_2: OpCodeWithIndices(0x2cu)
    class Aload_3: OpCodeWithIndices(0x2du)
    class Anewarray(referenceIndexByte1: Short, referenceIndexByte2: Short): OpCodeWithIndices(0xbdu, referenceIndexByte1, referenceIndexByte2)
    class Areturn: OpCodeWithIndices(0xb0u)
    class Arraylength: OpCodeWithIndices(0xbeu)
    class Astore(referenceIndex: Short): OpCodeWithIndices(0x3au, referenceIndex)
    class Astore_0: OpCodeWithIndices(0x4bu)
    class Astore_1: OpCodeWithIndices(0x4cu)
    class Astore_2: OpCodeWithIndices(0x4du)
    class Astore_3: OpCodeWithIndices(0x4eu)
    class Athrow: OpCodeWithIndices(0xbfu)
    class Baload: OpCodeWithIndices(0x33u)
    class Bastore: OpCodeWithIndices(0x54u)
    class Bipush(byte: Short): OpCodeWithIndices(0x10u, byte)
    class D2f: OpCodeWithIndices(0x90u)
    class D2I: OpCodeWithIndices(0x8eu)
    class D2l: OpCodeWithIndices(0x8fu)
    class Dadd: OpCodeWithIndices(0x63u)
    class Daload: OpCodeWithIndices(0x31u)
    class Dastore: OpCodeWithIndices(0x52u)
    class Dcompg: OpCodeWithIndices(0x98u)
    class Dcompl: OpCodeWithIndices(0x97u)
    class Dconst_0: OpCodeWithIndices(0x0eu)
    class Dconst_1: OpCodeWithIndices(0x0fu)
    class Ddiv: OpCodeWithIndices(0x6fu)
    class Dload(referenceIndex: Short): OpCodeWithIndices(0x18u, referenceIndex)
    class Dload_0: OpCodeWithIndices(0x26u)
    class Dload_1: OpCodeWithIndices(0x27u)
    class Dload_2: OpCodeWithIndices(0x28u)
    class Dload_3: OpCodeWithIndices(0x29u)
    class Dmul: OpCodeWithIndices(0x6bu)
    class Dneg: OpCodeWithIndices(0x77u)
    class Drem: OpCodeWithIndices(0x73u)
    class Dreturn: OpCodeWithIndices(0xafu)
    class Dstore(referenceIndex: Short): OpCodeWithIndices(0x39u, referenceIndex)
    class Dstore_0: OpCodeWithIndices(0x47u)
    class Dstore_1: OpCodeWithIndices(0x48u)
    class Dstore_2: OpCodeWithIndices(0x49u)
    class Dstore_3: OpCodeWithIndices(0x4au)
    class Dsub: OpCodeWithIndices(0x67u)
    class Dup: OpCodeWithIndices(0x59u)
    class Dup_x1: OpCodeWithIndices(0x5au)
    class Dup_x2: OpCodeWithIndices(0x5bu)
    class Dup2: OpCodeWithIndices(0x5cu)
    class Dup2_x1: OpCodeWithIndices(0x5du)
    class Dup2_x2: OpCodeWithIndices(0x5eu)
    class F2d: OpCodeWithIndices(0x8du)
    class F2i: OpCodeWithIndices(0x8bu)
    class F2l: OpCodeWithIndices(0x8cu)
    class Fadd: OpCodeWithIndices(0x62u)
    class Faload: OpCodeWithIndices(0x30u)
    class Fastore: OpCodeWithIndices(0x51u)
    class Fcmpg: OpCodeWithIndices(0x96u)
    class Fcmpl: OpCodeWithIndices(0x95u)
    class Fconst_0: OpCodeWithIndices(0x0bu)
    class Fconst_1: OpCodeWithIndices(0x0cu)
    class Fconst_2: OpCodeWithIndices(0x0du)
    class Fdiv: OpCodeWithIndices(0x6eu)
    class Fload(referenceIndex: Short): OpCodeWithIndices(0x17u, referenceIndex)
    class Fload_0: OpCodeWithIndices(0x22u)
    class Fload_1: OpCodeWithIndices(0x23u)
    class Fload_2: OpCodeWithIndices(0x24u)
    class Fload_3: OpCodeWithIndices(0x25u)
    class Fmul: OpCodeWithIndices(0x6au)
    class Fneg: OpCodeWithIndices(0x76u)
    class Freg: OpCodeWithIndices(0x72u)
    class Freturn: OpCodeWithIndices(0xaeu)
    class Fstore(referenceIndex: Short): OpCodeWithIndices(0x38u, referenceIndex)
    class Fstore_0: OpCodeWithIndices(0x43u)
    class Fstore_1: OpCodeWithIndices(0x44u)
    class Fstore_2: OpCodeWithIndices(0x45u)
    class Fstore_3: OpCodeWithIndices(0x46u)
    class Fsub: OpCodeWithIndices(0x66u)
    class I2b: OpCodeWithIndices(0x91u)
    class I2c: OpCodeWithIndices(0x92u)
    class I2d: OpCodeWithIndices(0x87u)
    class I2f: OpCodeWithIndices(0x86u)
    class I2l: OpCodeWithIndices(0x85u)
    class I2s: OpCodeWithIndices(0x93u)
    class Iadd: OpCodeWithIndices(0x60u)
    class Iaload: OpCodeWithIndices(0x2eu)
    class Iand: OpCodeWithIndices(0x7eu)
    class Iastore: OpCodeWithIndices(0x4fu)
    class Iconst_m1: OpCodeWithIndices(0x02u)
    class Iconst_0: OpCodeWithIndices(0x03u)
    class Iconst_1: OpCodeWithIndices(0x04u)
    class Iconst_2: OpCodeWithIndices(0x05u)
    class Iconst_3: OpCodeWithIndices(0x06u)
    class Iconst_4: OpCodeWithIndices(0x07u)
    class Iconst_5: OpCodeWithIndices(0x08u)
    class Idiv: OpCodeWithIndices(0x6cu)
    class Iinc(referenceIndex: Short, constSignedByte: Short): OpCodeWithIndices(0x84u, referenceIndex, constSignedByte)
    class Iload(referenceIndex: Short): OpCodeWithIndices(0x15u, referenceIndex)
    class Iload_0: OpCodeWithIndices(0x1au)
    class Iload_1: OpCodeWithIndices(0x1bu)
    class Iload_2: OpCodeWithIndices(0x1cu)
    class Iload_3: OpCodeWithIndices(0x1du)
    class Imul: OpCodeWithIndices(0x68u)
    class Ineg: OpCodeWithIndices(0x74u)
    class Ior: OpCodeWithIndices(0x80u)
    class Irem: OpCodeWithIndices(0x70u)
    class Ireturn: OpCodeWithIndices(0xacu)
    class Ishl: OpCodeWithIndices(0x78u)
    class Ishr: OpCodeWithIndices(0x7au)
    class Istore(referenceIndex: Short): OpCodeWithIndices(0x36u, referenceIndex)
    class Istore_0: OpCodeWithIndices(0x3bu)
    class Istore_1: OpCodeWithIndices(0x3cu)
    class Istore_2: OpCodeWithIndices(0x3du)
    class Istore_3: OpCodeWithIndices(0x3eu)
    class Isub: OpCodeWithIndices(0x64u)
    class Iushr: OpCodeWithIndices(0x7cu)
    class Ixor: OpCodeWithIndices(0x82u)
    class L2d: OpCodeWithIndices(0x8au)
    class L2f: OpCodeWithIndices(0x89u)
    class L2i: OpCodeWithIndices(0x88u)
    class Ladd: OpCodeWithIndices(0x61u)
    class Laload: OpCodeWithIndices(0x2fu)
    class Land: OpCodeWithIndices(0x7fu)
    class Lastore: OpCodeWithIndices(0x50u)
    class Lcmp: OpCodeWithIndices(0x94u)
    class Lconst_0: OpCodeWithIndices(0x09u)
    class Lconst_1: OpCodeWithIndices(0x0au)
    class Ldc(constantIndex: Short): OpCodeWithIndices(0x12u, constantIndex)
    class Ldc_w(referenceIndexByte1: Short, referenceIndexByte2: Short): OpCodeWithIndices(0x13u, referenceIndexByte1, referenceIndexByte2)
    class Ldc2_w(referenceIndexByte1: Short, referenceIndexByte2: Short): OpCodeWithIndices(0x14u, referenceIndexByte1, referenceIndexByte2)
    class Ldiv: OpCodeWithIndices(0x6du)
    class Lload(referenceIndex: Short): OpCodeWithIndices(0x16u, referenceIndex)
    class Lload_0: OpCodeWithIndices(0x1eu)
    class Lload_1: OpCodeWithIndices(0x1fu)
    class Lload_2: OpCodeWithIndices(0x20u)
    class Lload_3: OpCodeWithIndices(0x21u)
    class Lmul: OpCodeWithIndices(0x69u)
    class Lneg: OpCodeWithIndices(0x75u)
    class Lor: OpCodeWithIndices(0x81u)
    class Lrem: OpCodeWithIndices(0x71u)
    class Lreturn: OpCodeWithIndices(0xadu)
    class Lshl: OpCodeWithIndices(0x79u)
    class Lshr: OpCodeWithIndices(0x7bu)
    class Lstore(referenceIndex: Short): OpCodeWithIndices(0x37u, referenceIndex)
    class Lstore_0: OpCodeWithIndices(0x3fu)
    class Lstore_1: OpCodeWithIndices(0x40u)
    class Lstore_2: OpCodeWithIndices(0x41u)
    class Lstore_3: OpCodeWithIndices(0x42u)
    class Lsub: OpCodeWithIndices(0x65u)
    class Lushr: OpCodeWithIndices(0x7du)
    class Lxor: OpCodeWithIndices(0x83u)
    class New(referenceIndexByte1: Short, referenceIndexByte2: Short): OpCodeWithIndices(0xbbu, referenceIndexByte1, referenceIndexByte2)
    class Newarray(arrayType: Short): OpCodeWithIndices(0xbcu, arrayType)  // arrayType is the Type of the new Array
    class Nop: OpCodeWithIndices(0x00u)
    class Pop: OpCodeWithIndices(0x57u)
    class Pop2: OpCodeWithIndices(0x58u)
    class Saload: OpCodeWithIndices(0x35u)
    class Sastore: OpCodeWithIndices(0x56u)
    class Sipush(shortByte1: Short, shortByte2: Short): OpCodeWithIndices(0x11u, shortByte1, shortByte2)
    class Swap: OpCodeWithIndices(0x5fu)
}