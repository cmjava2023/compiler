Start: packagecmjava2023.controlFlow.continue_test_simple;publicclassMain{publicstaticvoidmain(String[]args){inti=1;while(i<=5){i++;continue;}}}
|- Global_scope: packagecmjava2023.controlFlow.continue_test_simple;
|  |- Package_declaration: packagecmjava2023.controlFlow.continue_test_simple
|  |  |- package
|  |  L  Identifier: cmjava2023.controlFlow.continue_test_simple
|  |     |- cmjava2023
|  |     |- .
|  |     |- controlFlow
|  |     |- .
|  |     L  continue_test_simple
|  L  ;
L  Global_scope: publicclassMain{publicstaticvoidmain(String[]args){inti=1;while(i<=5){i++;continue;}}}
   L  Class_declaration: publicclassMain{publicstaticvoidmain(String[]args){inti=1;while(i<=5){i++;continue;}}}
      |- Access_modifier: public
      |  L  public
      |- class
      |- Main
      |- {
      |- Class_scope: publicstaticvoidmain(String[]args){inti=1;while(i<=5){i++;continue;}}
      |  L  Function_declaration: publicstaticvoidmain(String[]args){inti=1;while(i<=5){i++;continue;}}
      |     |- Access_modifier: public
      |     |  L  public
      |     |- static
      |     |- Type: void
      |     |  L  void
      |     |- main
      |     |- (
      |     |- Function_declaration_args: String[]args
      |     |  L  Function_declaration_arg: String[]args
      |     |     |- Type: String[]
      |     |     |  L  Array_type: String[]
      |     |     |     |- Class_type: String
      |     |     |     |  L  String
      |     |     |     |- [
      |     |     |     L  ]
      |     |     L  args
      |     |- )
      |     |- {
      |     |- Function_scope: inti=1;while(i<=5){i++;continue;}
      |     |  |- Assignment: inti=1
      |     |  |  |- Variable_declaration: inti
      |     |  |  |  |- Primitive_type: int
      |     |  |  |  |  L  Numeric_type: int
      |     |  |  |  |     L  Integral_type: int
      |     |  |  |  |        L  int
      |     |  |  |  L  i
      |     |  |  |- =
      |     |  |  L  Expressions: 1
      |     |  |     L  Expression: 1
      |     |  |        L  1
      |     |  |- ;
      |     |  L  Block_scope: while(i<=5){i++;continue;}
      |     |     L  While_loop: while(i<=5){i++;continue;}
      |     |        |- while
      |     |        |- (
      |     |        |- Expressions: i<=5
      |     |        |  L  Expression: i<=5
      |     |        |     |- Expression: i
      |     |        |     |  L  i
      |     |        |     |- Expression_operator: <=
      |     |        |     |  L  Numerical_comparison_operator: <=
      |     |        |     |     L  <=
      |     |        |     L  Expression: 5
      |     |        |        L  5
      |     |        |- )
      |     |        |- {
      |     |        |- Function_scope: i++;continue;
      |     |        |  |- Expressions: i++
      |     |        |  |  L  Expression: i++
      |     |        |  |     |- Expression: i
      |     |        |  |     |  L  i
      |     |        |  |     L  Expression_suffix: ++
      |     |        |  |        L  ++
      |     |        |  |- ;
      |     |        |  |- Continue_statement: continue
      |     |        |  |  L  continue
      |     |        |  L  ;
      |     |        L  }
      |     L  }
      L  }